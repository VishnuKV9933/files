WEBVTT

00:01.000 --> 00:05.440
Welcome back it's time to learn a nother data structure.

00:05.470 --> 00:12.520
This is a big one and an exciting one at that because it's going to introduce a lot of new topics especially

00:12.520 --> 00:14.990
when we get into algorithms as well.

00:15.130 --> 00:19.610
They're called trees and no no no not these kind of trees.

00:19.690 --> 00:30.520
More like this Trees are a data structure that have what we call a hierarchical structure as opposed

00:30.520 --> 00:35.290
to something like linked lists or arrays which are linear.

00:35.620 --> 00:39.640
Trees can have zero or more child nodes.

00:39.640 --> 00:49.060
You see a tree usually starts with a single root node or a parent node and every child of the tree descends

00:49.090 --> 00:50.790
from this root node.

00:51.100 --> 00:53.890
So it's kind of like an inversed tree really.

00:54.910 --> 01:02.120
And every child of a node descends from only one parent.

01:02.250 --> 01:09.080
So you have a parent child relationship that you see is you need directional That is it's gone one way

01:10.340 --> 01:16.430
and you also have leaf notes which are the very end of a tree data structure.

01:16.490 --> 01:24.820
Finally within a tree you can have things like subtrees such as the area over here circled in red three

01:24.830 --> 01:31.530
six seven form a subtree and tree data structures are very important because you work with them every

01:31.540 --> 01:32.040
day.

01:34.430 --> 01:39.860
If we go to Twitter.com or any Web site for that matter and we open the developer tools

01:44.090 --> 01:52.030
just like I did here if I go to the elements tab you see our web pages are created by something called

01:52.030 --> 01:55.220
the dorm or the document object model.

01:55.330 --> 01:58.450
And this is a tree data structure.

01:58.450 --> 02:04.390
It doesn't look like a tree that I just showed you but the browser is just making it look nice but underneath

02:04.390 --> 02:11.380
it we have had somebody that are children of the Schimmel tag inside the body.

02:11.380 --> 02:18.820
We have all these children and inside these children we have more children and more children and they're

02:18.820 --> 02:24.520
all connected hierarchically to one another.

02:24.570 --> 02:28.540
I'm sure everybody has tried to play chess online versus a computer.

02:28.650 --> 02:35.850
Well a computer in a chess game at least back in the day before we had things like machine learning

02:36.880 --> 02:39.710
used a tree data structure to make a decision.

02:40.000 --> 02:47.230
Should I make this move or should I make that move or should I make that move and it would pick moves

02:47.620 --> 02:51.550
based on which move had the better outcome.

02:51.550 --> 02:57.970
Facebook comments for example are a tree data structure where I can comment on a friend's photo and

02:57.970 --> 03:00.760
their friend can comment on my comment.

03:00.790 --> 03:04.930
Family trees can be represented in a tree data structure.

03:04.930 --> 03:14.730
And for us engineers and programmers you might have heard of the abstract syntax tree if I Google abstract

03:14.730 --> 03:22.090
syntax tree here well this is how programs are and code is usually being run.

03:22.120 --> 03:30.210
Usually we write code and then it gets broken down by the machine into this abstract syntax tree so

03:30.210 --> 03:33.450
that it understands what we wrote down.

03:33.600 --> 03:38.630
And this as you can see use is a tree data structure.

03:38.680 --> 03:44.260
The beauty of trees is that we use the same principle as we did in linked lists.

03:44.260 --> 03:51.550
That is we have notes and these notes can contain any type of information that we want we can have user

03:51.550 --> 03:55.170
information we can just have numbers like we have here anything we want.

03:55.180 --> 03:57.720
We can contain within a note.

03:57.760 --> 04:04.160
Now you might be thinking this kind of reminds me of a linked list and you'd be right.

04:04.160 --> 04:14.920
Link list is technically a type of tree but with just one single path and it's linear there's only one

04:14.920 --> 04:20.610
way to go from top to bottom versus what we've seen before in a normal tree like this one.

04:21.930 --> 04:25.500
Now the thing to keep in mind here there might be different than a linked list.

04:25.560 --> 04:31.420
Is that a node can only point to a child as you can see all the arrows point down.

04:32.590 --> 04:40.060
There's always one entry point which is the root but nodes don't really have to reference their parent

04:41.090 --> 04:47.740
now just like in real life there are many types of tree data structures that we can have.

04:48.040 --> 04:59.060
And if you go to Wikipedia and you look for all the tree data structures it's going to well intimidate

04:59.090 --> 04:59.300
you.

04:59.300 --> 05:00.180
That's for sure.

05:00.350 --> 05:07.580
Because look how many different types of trees we have just like in real life how we have all these

05:07.580 --> 05:08.860
different types of trees.

05:08.900 --> 05:16.050
There's different types of trees that we can have for a specific use case but don't get overwhelmed.

05:16.050 --> 05:20.410
And this course we're going to go over the main ones that get used.

05:20.410 --> 05:25.550
I would say 90 percent of the time and the ones that you're most likely going to encounter during an

05:25.550 --> 05:31.280
interview because at the end of the day once you understand what a tree data structures like how to

05:31.280 --> 05:38.360
create it how to perhaps use some actions on it then all the other trees that you saw are just minor

05:38.360 --> 05:47.120
alterations to why we know now now I want to warn you back in the day when I took a class on data structures

05:48.310 --> 05:56.140
this part especially trees really really dragged on and made me not interested in data structures because

05:56.200 --> 05:59.690
there's so many things you can talk about when it comes to trees.

05:59.710 --> 06:06.400
I'm going to try and keep you engaged to the best of my ability and try and be efficient through this

06:06.400 --> 06:11.950
section and show you the important aspects that you need to know for an interview and to lay the foundation

06:12.790 --> 06:18.590
not to teach you every single tree that there is which is not going to benefit the.

06:18.810 --> 06:22.270
With that in mind I'll see you in the next video.

06:22.380 --> 06:22.660
Bob.
